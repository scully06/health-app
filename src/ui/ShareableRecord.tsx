// src/ui/ShareableRecord.tsx
import React from 'react';
import { HealthRecord } from '../core/models/HealthRecord';
import { WeightRecord } from '../core/models/WeightRecord';
import { SleepRecord } from '../core/models/SleepRecord';
import { FoodRecord } from '../core/models/FoodRecord';

interface ShareableRecordProps {
  records: HealthRecord[];
  date: string;
  userName: string;
}

export const ShareableRecord: React.FC<ShareableRecordProps> = ({ records, date, userName }) => {
  const weightRecord = records.find(r => r instanceof WeightRecord) as WeightRecord | undefined;
  const sleepRecords = records.filter(r => r instanceof SleepRecord) as SleepRecord[];
  const foodRecords = records.filter(r => r instanceof FoodRecord) as FoodRecord[];

  const totalSleepMinutes = sleepRecords.reduce((sum, r) => sum + r.getTotalHours() * 60, 0);
  const totalSleepHours = Math.floor(totalSleepMinutes / 60);
  const remainingSleepMinutes = Math.round(totalSleepMinutes % 60);

  const totalCalories = foodRecords.reduce((sum, r) => sum + r.calories, 0);

  const formattedDate = new Date(date.replace(/-/g, '/')).toLocaleDateString('ja-JP', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    weekday: 'long',
  });

  return (
    <div style={{
      width: '400px',
      padding: '20px',
      fontFamily: 'sans-serif',
      border: '1px solid #ddd',
      borderRadius: '12px',
      backgroundColor: '#ffffff',
      boxShadow: '0 4px 8px rgba(0,0,0,0.1)',
      color: '#333'
    }}>
      <h2 style={{ textAlign: 'center', color: '#2c3e50', borderBottom: '2px solid #3498db', paddingBottom: '10px' }}>
        {userName}さんの健康記録
      </h2>
      <p style={{ textAlign: 'center', fontSize: '1.1rem', fontWeight: 'bold' }}>{formattedDate}</p>
      
      <div style={{ marginTop: '20px' }}>
        {weightRecord && (
          <p style={{ fontSize: '1.2rem', margin: '10px 0' }}>⚖️ 体重: <strong>{weightRecord.weight.toFixed(1)} kg</strong></p>
        )}
        {totalSleepMinutes > 0 && (
          <p style={{ fontSize: '1.2rem', margin: '10px 0' }}>😴 合計睡眠: <strong>{totalSleepHours}時間 {remainingSleepMinutes}分</strong></p>
        )}
        {totalCalories > 0 && (
          <p style={{ fontSize: '1.2rem', margin: '10px 0' }}>🍽️ 合計カロリー: <strong>{totalCalories} kcal</strong></p>
        )}
      </div>

      {foodRecords.length > 0 && (
        <div style={{ marginTop: '20px' }}>
          <h4 style={{ borderBottom: '1px solid #eee', paddingBottom: '5px' }}>食事の記録</h4>
          <ul style={{ listStyle: 'none', paddingLeft: 0, margin: '10px 0 0' }}>
            {foodRecords.map(r => (
              <li key={r.id} style={{ padding: '5px 0' }}>
                <strong>{r.mealType}:</strong> {r.description} ({r.calories} kcal)
              </li>
            ))}
          </ul>
        </div>
      )}
      <p style={{ textAlign: 'right', fontSize: '12px', color: '#aaa', marginTop: '20px', borderTop: '1px solid #eee', paddingTop: '10px' }}>
        Generated by Health App
      </p>
    </div>
  );
};
